P01
import java.util.LinkedList;

public class P01 {
    public static void main(String[] args) {    //넣고 빠지는 순서가 다르지만 결과적으로 같다
        LinkedList<Integer> stack=new LinkedList<>();
        stack.addLast(1);
        stack.addLast(2);
        stack.addLast(3);
        System.out.println(stack);
        System.out.println(stack.size());
        System.out.println(stack.isEmpty());
        int v=stack.getLast();
        System.out.println(v);
        v=stack.removeLast();
        System.out.println(v);
        System.out.println(stack);
        System.out.println(stack.pop());
        System.out.println(stack);
        System.out.println(stack.pop());
        System.out.println(stack);
        System.out.println(stack.isEmpty());
    }
}

P03
import java.util.Stack;

public class P03 {
    public static void main(String[] args) {
        String s="대한민국의 수도는 서울이다.";
        Stack<Character> stack=new Stack<>();
        for (int i = 0; i < s.length(); i++) {
            char c=s.charAt(i);
            stack.push(c);
        }
        while(!stack.isEmpty())
        {
            System.out.print(stack.pop());
        }
    }
}

P04
import java.util.LinkedList;

public class P04 {
    public static void main(String[] args) {
        String s="대한민국의 수도는 서울이다.";
        LinkedList<Character> stack=new LinkedList<>();
        for (int i = 0; i <s.length() ; i++) {
            stack.addFirst(s.charAt(i));

        }
        while(!stack.isEmpty()) {
            System.out.print(stack.removeFirst());
        }
    }
}

P05
import java.util.Stack;

public class P05 {
    public static void main(String[] args) {
        String s = ")1+3*(4+5))/(6*(7+8)(";
        System.out.println(checkParen(s));
    }

    private static boolean checkParen(String s) {
        Stack<Character> stack = new Stack<>();
        try {
            for (Character c : s.toCharArray()) {
                if(c=='(')
                    stack.push(c);
                if(c==')')
                    stack.pop();
            }
        } catch (Exception c) {
            return false;
        }
        if (stack.isEmpty()) {
            return true;
        } else
            return false;
    }
}

P06
import java.util.Stack;

public class P06 {
    public static void main(String[] args) {
        String s = "부산({Busan}[(Boo)(saan)])시청({City}{hall}[(See)(Cheong)])"; // true
        System.out.println(checkParen(s));
    }

    private static boolean checkParen(String s) {
        Stack<Character> stack = new Stack<>();
        for (char c : s.toCharArray()) {
            if (c == '(' || c == '{' || c == '[')
                stack.push(c);
            else if((c==')'||c=='}'||c==']')&&!stack.isEmpty()) {
                if(stack.peek()=='('||c==')')
                    stack.pop();
                else if(stack.peek()=='{'||c=='}')
                    stack.pop();
                else if(stack.peek()=='['||c==']')
                    stack.pop();
            }
            else if((c==')'||c=='}'||c==']')&&stack.isEmpty())
                return false;

        }
        if (stack.isEmpty())
            return true;
        else return false;
    }
}

P10
import java.util.Stack;

public class P10 {
    public static void main(String[] args) {
        String e = "3 1 2 / *";
        System.out.println(postfuxEval(e));
    }

    private static double postfuxEval(String e) {
        Stack<Double> stack = new Stack<>();
        for (String token : e.split("\\s+")) {
//            if (token.equals("+") || token.equals("-") || token.equals("/") || token.equals("*")) {
            if ("+ - / *".contains(token)) {
                double n2 = stack.pop();
                double n1 = stack.pop();
                if (token.equals("+")) stack.push(n1 + n2);
                if (token.equals("-")) stack.push(n1 - n2);
                if (token.equals("*")) stack.push(n1 * n2);
                if (token.equals("/")) stack.push(n1 / n2);
            } else
                stack.push(Double.parseDouble(token));
        }
        return stack.pop();
    }
}

P11
import java.util.Stack;

public class P11 {
    public static void main(String[] args) {
        String e = "34 12 25/*";
        System.out.println(postfixEval(e));
    }

    private static double postfixEval(String e) {
        Stack<Double> stack = new Stack<>();
        e=e.replace("/", " /");
        e=e.replace("*", " *");
        e=e.replace("+", " +");
        e=e.replace("-", " -");
        for (String token : e.split("\\s+")) {
            if ("+ - / *".contains(token)) {
                double n2 = stack.pop();
                double n1 = stack.pop();
                if (token.equals("+")) stack.push(n1 + n2);
                if (token.equals("-")) stack.push(n1 - n2);
                if (token.equals("*")) stack.push(n1 * n2);
                if (token.equals("/")) stack.push(n1 / n2);
            } else
                stack.push(Double.parseDouble(token));
        }
        return stack.pop();
    }
}

P13
public class P13 {
    public static void main(String[] args) {
        String s="대한민국의 수도는 서울이다.";
        char stack[] = new char[s.length()];
        int top = -1;
        for (int i=0;i<s.length();i++) {
            stack[++top]=s.charAt(i);
        }
        for(int i=top;i>=0;i--) {
            System.out.print(stack[i]);
        }
    }
}

P16
import java.util.Arrays;

public class P16 {
    public static void main(String[] args) {
        int n[] = {1, 2, 3, 4};
        System.out.println(Arrays.toString(n));
        int m[] = arrayCopy(n, n.length * 2); // 2배 확장
        n = m;
        System.out.println(Arrays.toString(n));
        n = arrayCopy(n, (int) (n.length * 0.25)); // 1/4로 축소
        System.out.println(Arrays.toString(n));
    }

    private static int[] arrayCopy(int[] n, int newSize) {
        int[] m = new int[newSize];
        if (m.length > n.length) {
            for (int i = 0; i < n.length; i++) {
                m[i] = n[i];
            }
        } else {
            for (int i = 0; i < m.length; i++) {
                m[i] = n[i];
            }
        }
        return m;
    }
}

P19
import java.util.Arrays;

public class P19_A {
    public static void main(String[] args) {
        int price[] = {100, 90, 80, 70, 85, 95, 110, 120};
        int span[] = new int[price.length];
        for (int i = 0; i < price.length; i++) {
            int count=1;
            for (int j = 0; j < i; j++) {
                if(price[i]>price[j])
                    count++;
            }
            span[i]=count;
        }
        System.out.println(Arrays.toString(span));
    }
}

import java.util.Arrays;
import java.util.Stack;

public class P19_B {
    public static void main(String[] args) {
        int price[] = {100, 90, 80, 70, 85, 95, 110, 120};
        int span[] = new int[price.length];
        Stack<Integer> st=new Stack<>();
        st.push(0);
        for(int i=0;i<price.length;i++) {
            span[i]=1;
            while(!st.empty()&&price[i]>=price[st.peek()])
                st.pop();
            if(st.empty())
                span[i]=i+1;
            else span[i]=i-st.peek();
            st.push(i);
        }
        System.out.println(Arrays.toString(span));
    }
}
